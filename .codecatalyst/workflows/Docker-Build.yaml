Name: Docker-Build
SchemaVersion: "1.0"

# Optional - Set automatic triggers.
Triggers:
  - Type: Push
    Branches:
      - main

# Required - Define action configurations.
Actions:
  Build_and_push:
    # Identifies the action. Do not modify this value.
    Identifier: aws/build@v1.0.0
    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source
    Outputs:
      # Optional; Automatically discover reports for popular test frameworks
      AutoDiscoverReports:
        Enabled: false
        # Use as prefix for the report files
        ReportNamePrefix: rpt
    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        - Run: CONTAINER_NAME="mysticlegends-server"
        - Run: REPOSITORY="956941652442.dkr.ecr.eu-west-1.amazonaws.com"
        - Run: VERSION=$(grep '<AssemblyVersion>'
            MysticLegendsServer/MysticLegendsServer.csproj | awk -F'[><]'
            '{print $3}')
        - Run: chmod +x Scripts/make_ecr_version_tag.sh
        - Run: TAG=$(Scripts/make_ecr_version_tag.sh ${VERSION} "$(aws ecr list-images
            --repository-name ${CONTAINER_NAME})")
        - Run: aws ecr get-login-password | docker login --username AWS --password-stdin
            ${REPOSITORY}
        - Run: docker build -f MysticLegendsServer/Dockerfile -t
            ${REPOSITORY}/${CONTAINER_NAME}:latest -t
            ${REPOSITORY}/${CONTAINER_NAME}:${TAG} .
        - Run: docker push ${REPOSITORY}/${CONTAINER_NAME} --all-tags
        - Run: docker logout ${REPOSITORY}
    Compute:
      Type: EC2
      Fleet: Linux.x86-64.Large
    Environment:
      Connections:
        - Role: codecatalyst
          Name: fidifis-eu
      Name: env-live
    Timeout: 10
  Refresh_Instances:
    # Identifies the action. Do not modify this value.
    Identifier: aws/build@v1.0.0
    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source
    Outputs:
      # Optional; Automatically discover reports for popular test frameworks
      AutoDiscoverReports:
        Enabled: false
        # Use as prefix for the report files
        ReportNamePrefix: rpt
    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        - Run: aws ssm get-parameter --name /mysticlegends/live/refresh_on_push | jq -r '.Parameter.Value'
        - Run: echo hello && [ $(aws ssm get-parameter --name /mysticlegends/live/refresh_on_push | jq -r '.Parameter.Value') = 'true' ] &&
            aws ecs update-service --cluster mysticlegends-live-cluster --service mysticlegends-server --force-new-deployment > /dev/null || true
    Compute:
      Type: EC2
      Fleet: Linux.x86-64.Large
    DependsOn:
      - Build_and_push
    Environment:
      Connections:
        - Role: codecatalyst
          Name: fidifis-eu
      Name: env-live
    Timeout: 20
